{//;Simple physics module   }
{//;Currently supported:    
    - velocity;
    - time;
    - acceleration;
    - movement
    - path                  }

{embed;{embedbuild;
    title:Physics module | Version: 0.17·µù;
    description:This module is used for physics stuff.{newline}You can use it in your projects.{newline}Example usage: `{exec;physics;API_CALL}`{newline}`API_CALL` is one of the API calls listed below.;
    fields.name:
}}

{fallback;Exception, check args.}

{//;Basic formulas first, like velocity/displacement}

{//;Displacement
    Linear displacement = path
    One-axis displacement != path, but path_final - path_initial
    Two-axis displacement - you don't need this one unless you are coding some very very very complex game with physics for Discord
}
{func;displacement;
    {set;~displacement;{abs;{math;-;{args;2};{args;1}}}}
}

{func;linear_disp;
    {set;~displacement;{abs;{args;1}}}
}

{func;displacement_2d;
    {set;~X_axis_1;{args;1}}
    {set;~Y_axis_1;{args;2}}
    {set;~X_axis_2;{args;3}}
    {set;~Y_axis_2;{args;4}}
    {set;~displacement;{abs;{math;-;{get;X_axis_1};{get;X_axis_2}}};{abs;{math;-;{get;~Y_axis_1};{get;~Y_axis_2}}}}
}

{//;Velocity:
    Linear - displacement divided by time
    One-axis - displacement divided by time
    Two axis - displacement divided by time}
{func;linear_velocity;
    {set;~velocity;{abs;{math;/;{func.linear_disp;{args;1}};{args;2}}}}
}

{func;velocity;
    {set;~velocity;{math;/;{func.displacement;{args;1;2}};{args;3}}}
}

{func;two_axis_vel;
    {set;~velocity;{abs;{math;/;{func.displacement_2d;{args;1;2;3;4}};{args;5}}}}
}