{//;Leveling system using autoresponse system}
{//;If you want to use it with blargbot, do `b!t autoresponse add {exec;lvl_system}}
{//;Also, you need to forbid users set their custom prefixes, as the system will only detect `b!` usage}
{//;And use only `b!` as a server prefix}

{//;Final version somewhen in the future...}

{//;Define maxLvl = 1000}
{set;@maxLvl;1000}
{//;Define XP cap for 1000th lvl}
{set;@xp_cap;1000000000}
{//;Define XP given per message}
{set;@rand_xp;{randint;1;100}}
{//;By default, user is at level 0 with XP amount of 10 to get next level. Level 0 is counted as 'first_level'}
{function;lvlup_xp;{set;@{userid}lvlxp;{math;+;0{get;@{userid}cur_xp};{math;/{math;%;{math;10;0{get;@{userid}cur_xp}}};{math;+;0{get;@{userid}lvl};0{math;@{userid}cur_xp}}}}}
{function;update_xp;{set;@{userid}cur_xp;{get;@{userid}lvlxp}}}
{function;userIsNew;{if;{indexof;{userid};{get;@users}};==;{get;@users;{indexof;{userid};{get;@users}}};{push;{userid}}{set;@{userid}lvl;0}{set;@{userid}cur_xp;10}}}
{//;Storing progress. Format: [user] [lvl] [current_xp]}
{function;storeUserProgress;{set;@{userid}progress;["{userid}","{get;@{userid}lvl}","{get;@{userid}cur_xp}"]}}
{set;~isCommand;{regextest;;\b!/gmi}}
{//;Set all users in guild}
{set;@users;{guildmembers}}
{func.userIsNew}
{if;{get;@{userid}cur_xp};==;{get;@{userid}lvlxp};{set;@{userid}lvl;{math;+;0{get;@{userid}lvl};1}}}
{func.update_xp}
{func.storeUserProgress}